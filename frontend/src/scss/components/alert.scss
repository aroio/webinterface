//
// alert
// ---------------------------------------------------------

$alert-padding-x: spacing(2);
$alert-padding-y: spacing();
$alert-font-weight: getFontWeight(medium);
$alert-height: $tmpl-head-bottom-height-desktop;
$alert-z-index: getZindex(alert);

.alert {
  padding: $alert-padding-y $alert-padding-x;
  margin-bottom: $alert-padding-y;

  .alert__title {
    font-weight: getFontWeight(bold);
    text-transform: uppercase;
    opacity: .6;
    font-size: getFontSize(md);
  }

  .alert__body {
    font-weight: $alert-font-weight;

    p:last-child {
      margin-bottom: 0;
    }
  }

  .alert__close {
    position: absolute;
    top: 5px;
    right: 7px;
    opacity: .3;
    transition: $base-animation;

    @include hoverState {
      cursor: pointer;
      opacity: 1;
    }
  }

  &.alert--success {
    background: getColor(success);
    color: getColor(white);

    .icon {
      color: getColor(white);
    }

  }

  &.alert--error, &.alert--danger {
    background: getColor(danger);
    color: getColor(white);

    .icon {
      color: getColor(white);
    }

  }
  //
  //@each $name, $color in map-merge($colors, $states) {
  //  &.alert--#{'' + $name} {
  //    background: $color;
  //    color: color-contrast($color);
  //
  //    .icon {
  //      color: color-contrast($color);
  //    }
  //
  //    @if $color == 'success' {
  //      @include textSelection(getColor(white), color-contrast($color));
  //    } @else {
  //      @include textSelection($color, color-contrast($color));
  //    }
  //  }
  //}
}

.flash {
  text-align: center;
  position: fixed;
  left: 0;
  width: 100%;
  z-index: $alert-z-index;
  top: 0;
  display: flex;
  justify-content: center;
  align-items: center;

  &.alert {
    min-height: $alert-height;
    line-height: 1;
  }

  @include media-breakpoint-up(sm) {
    @include paddingHorizontal($tmpl-aside-left-width-desktop);
  }
}



.alert-box {
  position: fixed;
  z-index: 1200;
  overflow: hidden;
  left: unset;
  top: spacing(13);
  width: 100%;

  display: flex;
  flex-direction: column;

  .alert {
    position: relative;
    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.1);

    @include paddingHorizontal(spacing(3));
    @include paddingVertical(spacing(1.5));

    &.alert--error {
      color: getColor(white) !important;

      .icon {
        color: getColor(white) !important;
      }
    }
  }


  .flash.alert {
    min-height: unset;
  }

  @include media-breakpoint-up(md){
    top: spacing(12);
    padding-right: spacing(4);
    right: 0;
    width: unset;
    min-width: 300px;
    max-width: 400px;
  }

  &.alert-box--no-navigation {
    top: spacing(2.5);
  }
}
